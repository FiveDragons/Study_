# 자료형

# 자료에 대한 타입 : 숫자, 문자열, 불리언
# 어떤 값을 담는 자료구조 : 변수, 리스트, 튜플, 딕셔너리, 집합

# 자료형은 자료형의 종류에 따라 결과값이 달라진다
# 숫자라면  1  +  1  =  2
# 문자라면 '1' + '1' = '11'

# 수학의 수식과는 차이가 있다
# a = a + 1  : a + 1을  a라는 값에 담는다.

# 리스트란 : 변수 여러 개를 묶는 역할
'''
a = "김용오"         # 이런형식의 여러 변수를
b = "김용사"
c = "김용삼" 
d = "김용이"
e = "김용일"

a = ["김용오", "김용사", "김용삼", "김용이", "김용일"]  # 하나의 리스트에 담는다.

print(a) # 전체 리스트 출력
print(a[1]) # 리스트 안의 1번 index출력

idd = [1, 2, "int", "김용오", ["파이썬", "Python"]]  # 리스트 안에 리스트를 넣을 수 있다.
print(idd)       # 리스트 안에 리스트를 또 넣을 수 있다.
print(idd[4])    # 리스트 안의 리스트 출력 법 : 자리에 맞는 index 출력
print(idd[4][1]) # 리스트 안의 리스트 안의 1번 index 출력
# 이와 같이 리스트 안에 리스트가 계속 들어갈 수 있다.
'''
'''
# 리스트의 인덱싱 
a = [1,2,3]
print(a[0])
print(a[0] + a[2]) # a list 0번 index인 1 과 a list 2번 index인 3을 더한다.
print(a[-1]) # 리스트도 -를 사용하면 뒷자리에서 부터 출력가능

# 리스트의 슬라이싱
a = [1,2,3,4,5]
print(a[0:2]) # a list의 0 ~ 2번 index를 slicing한다.

# 리스트의 더하기
a = [1,2,3]
b = [4,5,6]
print(a + b) # 리스트끼리 더하여 리스트가 이어진다.
print(a * 3) # 곱셈을 하면 리스트가 입력한 수만큼 곱으로 이어진다.

# 리스트에서 하나의 값 수정하기
a = ["파이썬", "자바", "아두이노"]
a[2] = "라즈베리 파이" # a list안의 2번 index인 아두이노를 라즈베리 파이로 바꾼다.
print(a)

# 리스트에서 연속된 범위의 값 수정하기
a[0:2] = ["루비", "코틀린", "자바스크립트"] 
print(a)

# [] 사용해 리스트 요소 삭제하기
a[0:2] = [] # a[이상:미만] = [] 삭제
print(a)    

# del 함수 사용해 리스트 요소 삭제하기
del a[1]
print(a)
'''
'''
# 리스트에 요소 추가(append)
a = [1,2,3]
a.append(4) # list에 append를 이용하여 4를 추가
print(a)

# 리스트 정렬(sort)
a = [1, 4, 3, 2] # 숫자의 경우 크기 순으로 정렬
b = ["파이썬","Java","Ardoino", "라즈베리 파이"] # 문자의 경우 알파벳 A->Z 한글 ㄱ->ㅎ 순으로 정렬
a.sort()
b.sort()
print(a)
print(b)

# 리스트 뒤집기(reverse)
a = ['a', 'c', 'b'] # 말 그대로 인덱스가 뒤집힌다.
a.reverse()
print(a)

# 인덱스 위치 반환(index)
a = [1,2,3]
print(a.index(3)) # 숫자 3의 index 반환
print(a.index(1)) # 숫자 1의 index 반환

# 리스트 요소 삽입(insert)
a = [1,2,3]
a.insert(0,4) # 0번째 "index"에 4라는 숫자를 삽입(추가) 하겠다.
print(a)

# 리스트 요소 제거(remove)
a = [1,2,3,1,2,3]
a.remove(3) # 3이라는 "값"을 삭제 하겠다. (단 가장 앞에 있는 하나만 지워지기에 추가로 삭제하려면 다시 실행해야함)
print(a)

# 리스트 요소 끄집어내기(pop)
a = [1,2,3]
print(a.pop()) # 마지막 index 값을 빼낸다.(3)
print(a)

# 리스트에 포함된 요소 X의 개수 세기(count)
a = [1,2,3,1]
print(a.count(1)) # a라는 list 안에 1이 몇개 있는지 출력

# 리스트 확장(extend)
a = [1,2,3]
a.extend([4,5]) # a 라는 list 안에 4,5 라는 리스트를 확장 한다. (list안에 list가 추가 되는게 아닌 list안에 list의 값이 추가 된다.)
print(a)
b = [6,7]
a.extend(b) # 위와 다른점은 6,7이 담긴 list를 만들고 a list에 b list의 값을 확장시킴
print(a)
'''